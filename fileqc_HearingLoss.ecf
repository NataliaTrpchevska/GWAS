### RS
DEFINE	--pathOut ~/PATH/
		--strMissing NA
		--strSeparator TAB
		--acolIn SNPID;chr;position;strand_genome;coded_all;noncoded_all;n;AF_coded_all;beta;SE;pval;oevar_imp
		--acolInClasses character;character;integer;character;character;character;numeric;numeric;numeric;numeric;numeric;numeric
		--acolNewName SNP;CHR;POS;STRAND;EFFECT_ALLELE;OTHER_ALLELE;N;EAF;BETA;SE;PVAL;IMPUTATION
### Please DEFINE here all input files:
EASYIN	--fileIn ~/PATH/FILE.txt.gz


#################################################################################################################
## EASYQC Scripting interface:
START EASYQC

####################
## 1. Sanity checks: 

CLEAN --rcdClean is.na(EFFECT_ALLELE)&is.na(OTHER_ALLELE) --strCleanName numDrop_Missing_Alleles
CLEAN --rcdClean is.na(PVAL) --strCleanName numDrop_Missing_P
CLEAN --rcdClean is.na(BETA) --strCleanName numDrop_Missing_BETA
CLEAN --rcdClean is.na(SE) --strCleanName numDrop_Missing_SE
CLEAN --rcdClean is.na(EAF) --strCleanName numDrop_Missing_EAF
CLEAN --rcdClean is.na(N) --strCleanName numDrop_Missing_N
CLEAN --rcdClean is.na(IMPUTATION) --strCleanName numDrop_Missing_Imputation

CLEAN --rcdClean PVAL<0|PVAL>1 --strCleanName numDrop_invalid_PVAL
CLEAN --rcdClean SE<=0|SE==Inf|SE>=10 --strCleanName numDrop_invalid_SE
CLEAN --rcdClean abs(BETA)>=10 --strCleanName numDrop_invalid_BETA
CLEAN --rcdClean EAF<0|EAF>1 --strCleanName numDrop_invalid_EAF
CLEAN --rcdClean IMPUTATION<0 --strCleanName numDrop_invalid_IMPUTATION

## This is important for data reduction, because some studies report an unnecessary large number of significant digits
EDITCOL --rcdEditCol signif(EAF,4) --colEdit EAF
EDITCOL --rcdEditCol signif(BETA,4) --colEdit BETA
EDITCOL --rcdEditCol signif(SE,4) --colEdit SE
EDITCOL --rcdEditCol signif(PVAL,4) --colEdit PVAL

####################
## 2. Prepare files for filtering and apply minimum thresholds: 

## Exclude monomorphic SNPs:
CLEAN --rcdClean (EAF==0)|(EAF==1) --strCleanName numDrop_Monomorph

## Create column with minor allele count:
ADDCOL --rcdAddCol signif(2*pmin(EAF,1-EAF)*N,4) --colOut MAC

## Create MAF column
ADDCOL --rcdAddCol signif(pmin(EAF,1-EAF),4) --colOut MAF

## If you do not want to apply filters at this stage, please comment out the following rows or amend the 
## filter thresholds according to your needs. 
CLEAN --rcdClean N<100 --strCleanName numDrop_Nlt100
CLEAN --rcdClean MAC<=20 --strCleanName numDrop_MAClet20
CLEAN --rcdClean (!is.na(IMPUTATION))&IMPUTATION<0.5 --strCleanName numDrop_lowImpQual

# Get beta information
CALCULATE --rcdCalc median(BETA,na.rm=T) --strCalcName MedianBETA
CALCULATE --rcdCalc mean(BETA,na.rm=T) --strCalcName MeanBETA

####################
#### 3. Harmonization of allele coding (I/D)
## The aim of this step is to compile uniform allele codes A/C/G/T or I/D from different versions f given alleles

HARMONIZEALLELES 	--colInA1 EFFECT_ALLELE 
					--colInA2 OTHER_ALLELE
	
####################
## 4. Harmonization of marker names (compile 'cptid')
ADDCOL --rcdAddCol paste(CHR,POS,sep=:") --colOut cptid

# CREATECPTID --fileMap ~/GWAS_processing/gehoor/rsmid_map.1000G_ALL_p1v3.merged_mach_impute.v1.txt.gz
#			--colMapMarker rsmid
#			--colMapChr chr
#			--colMapPos pos
#			--colInMarker SNP
#			--colInA1 EFFECT_ALLELE
#			--colInA2 OTHER_ALLELE
#			--colInChr CHR
#			--colInPos POS
			
####################
## 5.Filter duplicate SNPs
## This will count duplicates and throw out the SNP with the lower sample size:

CLEANDUPLICATES --colInMarker cptid 
				--strMode samplesize 
				--colN MAC
				
## The duplicates are written to the output in a separate file "*duplicates.txt"

####################
## 6. AF Checks

MERGE 	--colInMarker cptid
		--fileRef ~/GWAS_processing/gehoor/allelefreq.1000G_EUR_p1v3.impute_legends.noMono.noDup.noX.v2.txt.gz
			--acolIn cptid;a0;a1;eaf 
			--acolInClasses character;character;character;numeric
		--strRefSuffix .ref
		--colRefMarker cptid
		--blnWriteNotInRef 1

ADJUSTALLELES 	--colInStrand STRAND
				--colInA1 EFFECT_ALLELE 
				--colInA2 OTHER_ALLELE 
				--colInFreq EAF
				--colInBeta BETA
				--colRefA1 a0.ref
				--colRefA2 a1.ref
				--blnMetalUseStrand 1
				--blnRemoveMismatch 1
				--blnRemoveInvalid 1

				
AFCHECK --colInFreq EAF
		--colRefFreq eaf.ref
		--numLimOutlier 0.2
		--blnPlotAll 0

####################
## 7. Rearrange columns and Write CLEANED output

GETCOLS --acolOut cptid;SNP;STRAND;EFFECT_ALLELE;OTHER_ALLELE;EAF;IMPUTATION;BETA;SE;PVAL;N;MAC

WRITE	--strPrefix CLEANED. 
		--strMissing NA 
		--strMode gz

####################
## 8.  Plot Z versus P

PZPLOT	--colBeta BETA 
		--colSe SE 
		--colPval PVAL

####################
## 9.  QQ plot

QQPLOT	--acolQQPlot PVAL
		--numPvalOffset 0.05
		--strMode subplot

####################
## 10. Summary Stats post-QC

CALCULATE --rcdCalc max(N,na.rm=T) --strCalcName N_max
GC	--colPval PVAL --blnSuppressCorrection 1

RPLOT	--rcdRPlotX N_max
		--rcdRPlotY Lambda.PVAL.GC
		--arcdAdd2Plot abline(h=1,col='orange');abline(h=1.1,col='red')
		--strAxes lim(0,NULL,0,NULL)
		--strPlotName GC-PLOT

####################
## 11. SE-N Plot - Trait transformation

CALCULATE --rcdCalc median(SE,na.rm=T) --strCalcName SE_median
CALCULATE --rcdCalc median(1/sqrt(2*EAF*(1-EAF)), na.rm=T) --strCalcName c_trait_transf

RPLOT 	--rcdRPlotX sqrt(N_max)
		--rcdRPlotY c_trait_transf/SE_median
		--arcdAdd2Plot abline(0,1,col='orange')
		--strAxes zeroequal
		--strPlotName SEN-PLOT
		
STOP EASYQC
#################################################################################################################
#################################################################################################################
